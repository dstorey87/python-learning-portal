{
  "name": "python-learning-portal",
  "version": "1.0.0",
  "description": "Interactive Python learning portal with live code execution",
  "workspaces": [
    "packages/@portal/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:executor\"",
    "dev:backend": "cd packages/@portal/backend && npm run dev",
    "dev:frontend": "cd packages/@portal/frontend && npm run dev",
    "dev:executor": "cd packages/@portal/executor && npm run dev",
    "build": "npm run build:types && npm run build:exercises && npm run build:executor && npm run build:backend && npm run build:frontend",
    "build:types": "cd packages/@portal/types && npm run build",
    "build:exercises": "cd packages/@portal/exercises && npm run build",
    "build:executor": "cd packages/@portal/executor && npm run build",
    "build:backend": "cd packages/@portal/backend && npm run build",
    "build:frontend": "cd packages/@portal/frontend && npm run build",
    "start": "cd packages/@portal/backend && npm start",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "npm run test:types && npm run test:exercises && npm run test:executor && npm run test:backend && npm run test:frontend",
    "test:types": "cd packages/@portal/types && npm run test",
    "test:exercises": "cd packages/@portal/exercises && npm run test",
    "test:executor": "cd packages/@portal/executor && npm run test",
    "test:backend": "cd packages/@portal/backend && npm run test",
    "test:frontend": "cd packages/@portal/frontend && npm run test",
    "test:integration": "playwright test",
    "test:ui": "playwright test --ui",
    "install:all": "npm install && cd packages/@portal/types && npm install && cd ../exercises && npm install && cd ../executor && npm install && cd ../backend && npm install && cd ../frontend && npm install",
    "lint": "npm run lint:types && npm run lint:exercises && npm run lint:executor && npm run lint:backend && npm run lint:frontend",
    "lint:types": "cd packages/@portal/types && npm run lint",
    "lint:exercises": "cd packages/@portal/exercises && npm run lint",
    "lint:executor": "cd packages/@portal/executor && npm run lint",
    "lint:backend": "cd packages/@portal/backend && npm run lint",
    "lint:frontend": "cd packages/@portal/frontend && npm run lint",
    "lint:fix": "npm run lint:fix:types && npm run lint:fix:exercises && npm run lint:fix:executor && npm run lint:fix:backend && npm run lint:fix:frontend",
    "lint:fix:types": "cd packages/@portal/types && npm run lint:fix",
    "lint:fix:exercises": "cd packages/@portal/exercises && npm run lint:fix", 
    "lint:fix:executor": "cd packages/@portal/executor && npm run lint:fix",
    "lint:fix:backend": "cd packages/@portal/backend && npm run lint:fix",
    "lint:fix:frontend": "cd packages/@portal/frontend && npm run lint:fix",
    "type-check": "npm run type-check:types && npm run type-check:executor && npm run type-check:backend && npm run type-check:frontend",
    "type-check:types": "cd packages/@portal/types && npm run type-check",
    "type-check:executor": "cd packages/@portal/executor && npm run type-check",
    "type-check:backend": "cd packages/@portal/backend && npm run type-check",
    "type-check:frontend": "cd packages/@portal/frontend && npm run type-check",
    "clean": "npm run clean:types && npm run clean:exercises && npm run clean:executor && npm run clean:backend && npm run clean:frontend",
    "clean:types": "cd packages/@portal/types && npm run clean",
    "clean:exercises": "cd packages/@portal/exercises && npm run clean",
    "clean:executor": "cd packages/@portal/executor && npm run clean",
    "clean:backend": "cd packages/@portal/backend && npm run clean",
    "clean:frontend": "cd packages/@portal/frontend && npm run clean",
    "docker:build": "cd infrastructure && ./deploy.ps1 build",
    "docker:dev": "cd infrastructure && ./deploy.ps1 dev",
    "docker:prod": "cd infrastructure && ./deploy.ps1 prod",
    "docker:stop": "cd infrastructure && ./deploy.ps1 stop",
    "docker:clean": "cd infrastructure && ./deploy.ps1 clean",
    "docker:health": "cd infrastructure && ./deploy.ps1 health",
    "docker:logs": "cd infrastructure && ./deploy.ps1 logs",
    "prepare": "husky install",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@types/node": "^24.3.0",
    "concurrently": "^8.2.2"
  },
  "main": "index.js",
  "dependencies": {
    "ansi-regex": "^5.0.1",
    "ansi-styles": "^4.3.0",
    "chalk": "^4.1.2",
    "cliui": "^8.0.1",
    "color-convert": "^2.0.1",
    "color-name": "^1.1.4",
    "date-fns": "^2.30.0",
    "emoji-regex": "^8.0.0",
    "escalade": "^3.2.0",
    "get-caller-file": "^2.0.5",
    "has-flag": "^4.0.0",
    "is-fullwidth-code-point": "^3.0.0",
    "lodash": "^4.17.21",
    "playwright": "^1.55.0",
    "playwright-core": "^1.55.0",
    "require-directory": "^2.1.1",
    "rxjs": "^7.8.2",
    "shell-quote": "^1.8.3",
    "spawn-command": "^0.0.2",
    "string-width": "^4.2.3",
    "strip-ansi": "^6.0.1",
    "supports-color": "^8.1.1",
    "tree-kill": "^1.2.2",
    "tslib": "^2.8.1",
    "wrap-ansi": "^7.0.0",
    "y18n": "^5.0.8",
    "yargs": "^17.7.2",
    "yargs-parser": "^21.1.1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs"
}
